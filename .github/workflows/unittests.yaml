name: Python Unit Tests

on:
  push:
    branches:
      - main # Run on pushes to the main branch
  pull_request:
    branches:
      - main # Run on pull requests targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub Actions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to checkout your repository code

    - name: Set up Python
      uses: actions/setup-python@v5 # Action to set up a specific Python version
      with:
        python-version: '3.9' # Or your desired Python version, e.g., '3.x' for latest 3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r back-end-python/gameactions/requirements.txt
        pip install -r back-end-python/tests/requirements.txt

    - name: Run Pylint
      run: |
        pylint --fail-under=8 back-end-python/gameactions/app.py
      # Continue on error if pylint fails, you might want to remove this if you want strict failure
      continue-on-error: false

    - name: Run Pytest and generate reports
      run: |
        pytest back-end-python/tests/unit --junit-xml=unittests.xml --cov-report=xml --cov=gameactions --cov-branch
      # Store the test and coverage reports as workflow artifacts (optional, but good for review)
    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: unittests.xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverage.xml
